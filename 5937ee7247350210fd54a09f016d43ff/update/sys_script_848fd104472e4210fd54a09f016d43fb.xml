<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1245589_loaner_v_vehicle_servicing</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_1245589_loaner_v_vehicle_servicing">vehicle_status=^EQ<item display_value="-- None --" endquery="false" field="vehicle_status" goto="false" newquery="false" operator="=" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Create Servicing Record on Status Change</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

    // Query the Vehicle Servicing table to check if there are any open tickets for the vehicle
    var vehicleServicingGR = new GlideRecord('x_1245589_loaner_v_vehicle_servicing');
    vehicleServicingGR.addQuery('vehicle_tracker', current.sys_id);
    vehicleServicingGR.addQuery('ticket_status', 'Open');
    vehicleServicingGR.query();

    // If no open servicing tickets found, create a new one
    if (!vehicleServicingGR.hasNext()) {
        var newVehicleServicing = new GlideRecord('x_1245589_loaner_v_vehicle_servicing');
        newVehicleServicing.initialize();
        newVehicleServicing.vehicle_tracker = current.sys_id; // Map Vehicle Tracker
        newVehicleServicing.vehicle = current.vehicle; // Map Vehicle
        newVehicleServicing.vehicle_status = 'In Service'; // Set Vehicle Status to In Service
        newVehicleServicing.date_send_for_servicing = new GlideDateTime(); // Set Date send for Servicing to now
        newVehicleServicing.ticket_status = 'Open'; // Set Ticket Status to Open
        newVehicleServicing.insert(); // Insert the new record
    }

})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>dandev</sys_created_by>
        <sys_created_on>2024-05-28 18:05:08</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>848fd104472e4210fd54a09f016d43fb</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>Create Servicing Record on Status Change</sys_name>
        <sys_overrides/>
        <sys_package display_value="Loaner Vehicle Request and Inventory" source="x_1245589_loaner_v">5937ee7247350210fd54a09f016d43ff</sys_package>
        <sys_policy/>
        <sys_scope display_value="Loaner Vehicle Request and Inventory">5937ee7247350210fd54a09f016d43ff</sys_scope>
        <sys_update_name>sys_script_848fd104472e4210fd54a09f016d43fb</sys_update_name>
        <sys_updated_by>dandev</sys_updated_by>
        <sys_updated_on>2024-06-18 12:50:53</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=848fd104472e4210fd54a09f016d43fb"/>
</record_update>
